nnoremap <Leader>sv :RelatedSpecVOpen<CR>

nnoremap <Leader>stsl :call Send_to_Tmux(SpringRSpecLine() . "\n")<CR>
nnoremap <Leader>stsr :call Send_to_Tmux(SpringRSpec() . "\n")<CR>
nnoremap <Leader>strl :call Send_to_Tmux(RSpecLine() . "\n")<CR>
nnoremap <Leader>strs :call Send_to_Tmux(RSpec() . "\n")<CR>
nnoremap <Leader>stmt :call Send_to_Tmux(Minitest() . "\n")<CR>
nnoremap <Leader>stml :call Send_to_Tmux(MinitestLine() . "\n")<CR>

nnoremap <Leader>stt :call TextToTmux()<CR>

:autocmd BufWritePre * :StripTrailingWhitespaces
:autocmd BufNewFile,BufRead *.md setlocal wrap

function TextToTmux()
  call inputsave()
  let a:command = input("Enter command: ")
  call inputrestore()
  call Send_to_Tmux(a:command . "\n")
endfunction

let g:xmpfilter_cmd = "seeing_is_believing"

autocmd FileType ruby nmap <buffer> <C-x>m <Plug>(seeing_is_believing-mark)
autocmd FileType ruby xmap <buffer> <C-x>m <Plug>(seeing_is_believing-mark)
autocmd FileType ruby imap <buffer> <C-x>m <Plug>(seeing_is_believing-mark)

autocmd FileType ruby nmap <buffer> <C-x>c <Plug>(seeing_is_believing-clean)
autocmd FileType ruby xmap <buffer> <C-x>c <Plug>(seeing_is_believing-clean)
autocmd FileType ruby imap <buffer> <C-x>c <Plug>(seeing_is_believing-clean)

autocmd FileType ruby nmap <buffer> <C-x>r <Plug>(seeing_is_believing-run_-x)
autocmd FileType ruby xmap <buffer> <C-x>r <Plug>(seeing_is_believing-run_-x)
autocmd FileType ruby imap <buffer> <C-x>r <Plug>(seeing_is_believing-run_-x)
